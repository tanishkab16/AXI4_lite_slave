$date
	Sat Aug 16 10:42:16 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module axi_slave_tb $end
$var wire 1 ! bready $end
$var wire 1 " wready $end
$var wire 1 # rvalid $end
$var wire 2 $ rresp [1:0] $end
$var wire 32 % rdata [31:0] $end
$var wire 1 & bvalid $end
$var wire 2 ' bresp [1:0] $end
$var wire 1 ( awready $end
$var wire 1 ) arready $end
$var reg 32 * araddr [31:0] $end
$var reg 1 + arvalid $end
$var reg 32 , awaddr [31:0] $end
$var reg 1 - awvalid $end
$var reg 1 . clk $end
$var reg 1 / rready $end
$var reg 1 0 rst_n $end
$var reg 32 1 wdata [31:0] $end
$var reg 4 2 wstrb [3:0] $end
$var reg 1 3 wvalid $end
$scope module u_axi_slave $end
$var wire 32 4 araddr [31:0] $end
$var wire 1 + arvalid $end
$var wire 32 5 awaddr [31:0] $end
$var wire 1 - awvalid $end
$var wire 1 ! bready $end
$var wire 1 . clk $end
$var wire 1 / rready $end
$var wire 1 0 rst_n $end
$var wire 32 6 wdata [31:0] $end
$var wire 4 7 wstrb [3:0] $end
$var wire 1 3 wvalid $end
$var wire 3 8 write_reg_addr [2:0] $end
$var wire 3 9 read_reg_addr [2:0] $end
$var wire 32 : rdata [31:0] $end
$var parameter 2 ; IDLE $end
$var parameter 2 < R_IDLE $end
$var parameter 2 = R_READ $end
$var parameter 2 > WRITE $end
$var parameter 2 ? WRITE_RESP $end
$var reg 1 ) arready $end
$var reg 1 ( awready $end
$var reg 2 @ bresp [1:0] $end
$var reg 1 & bvalid $end
$var reg 2 A read_state [1:0] $end
$var reg 2 B rresp [1:0] $end
$var reg 1 # rvalid $end
$var reg 1 " wready $end
$var reg 2 C write_state [1:0] $end
$scope module u_register_file $end
$var wire 1 . clk $end
$var wire 3 D read_addr [2:0] $end
$var wire 1 0 rst_n $end
$var wire 3 E write_addr [2:0] $end
$var wire 32 F write_data [31:0] $end
$var wire 1 G write_en $end
$var reg 32 H read_data [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 ?
b1 >
b1 =
b0 <
b0 ;
$end
#0
$dumpvars
bx H
0G
bx F
bx E
bx D
b0 C
b0 B
b0 A
b0 @
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
03
bx 2
bx 1
00
0/
0.
0-
bx ,
0+
bx *
0)
0(
b0 '
0&
bx %
b0 $
0#
0"
z!
$end
#5000
b0 %
b0 :
b0 H
1.
#10000
0.
#15000
1.
#20000
0.
10
#25000
bx %
bx :
bx H
1)
1"
1(
1.
#30000
1G
b0 8
b0 E
0.
13
1-
b11011110101011011011111011101111 1
b11011110101011011011111011101111 6
b11011110101011011011111011101111 F
b0 ,
b0 5
#35000
b1 C
0G
03
0-
1.
#40000
0.
#45000
b10 C
1&
0"
0(
1.
#50000
0.
#55000
b11011110101011011011111011101111 %
b11011110101011011011111011101111 :
b11011110101011011011111011101111 H
b1 A
b0 9
b0 D
1.
0+
b0 *
b0 4
#60000
0.
#65000
1/
1#
0)
1.
#70000
0.
#75000
b0 A
0#
0/
1.
#80000
0.
#85000
1)
1.
#90000
0.
#95000
1.
